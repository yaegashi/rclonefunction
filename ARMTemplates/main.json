{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.613.9944",
      "templateHash": "5194708281619869530"
    }
  },
  "parameters": {
    "appRGName": {
      "type": "string"
    },
    "srcRGName": {
      "type": "string"
    },
    "storageAccountName": {
      "type": "string"
    },
    "storageContainerName": {
      "type": "string",
      "defaultValue": "artifacts"
    }
  },
  "functions": [],
  "variables": {
    "location": "[deployment().location]"
  },
  "resources": [
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('srcRGName')]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Resources/resourceGroups",
      "apiVersion": "2021-04-01",
      "name": "[parameters('appRGName')]",
      "location": "[variables('location')]"
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "srcModule",
      "resourceGroup": "[parameters('srcRGName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageContainerName": {
            "value": "[parameters('storageContainerName')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "12490435605602111149"
            }
          },
          "parameters": {
            "storageAccountName": {
              "type": "string"
            },
            "storageContainerName": {
              "type": "string"
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2021-04-01",
              "name": "[parameters('storageAccountName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2"
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2019-06-01",
              "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}/{2}', parameters('storageAccountName'), 'default', parameters('storageContainerName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountName": {
              "type": "string",
              "value": "[parameters('storageAccountName')]"
            },
            "storageContainerName": {
              "type": "string",
              "value": "[parameters('storageContainerName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('srcRGName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "eventgridModule",
      "resourceGroup": "[parameters('srcRGName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "srcStorageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('srcRGName')), 'Microsoft.Resources/deployments', 'srcModule'), '2019-10-01').outputs.storageAccountName.value]"
          },
          "srcStorageContainerName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('srcRGName')), 'Microsoft.Resources/deployments', 'srcModule'), '2019-10-01').outputs.storageContainerName.value]"
          },
          "appStorageAccountId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('appRGName')), 'Microsoft.Resources/deployments', 'appModule'), '2019-10-01').outputs.storageAccountId.value]"
          },
          "appStorageQueueName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('appRGName')), 'Microsoft.Resources/deployments', 'appModule'), '2019-10-01').outputs.storageQueueName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "16409755618893278075"
            }
          },
          "parameters": {
            "srcStorageAccountName": {
              "type": "string"
            },
            "srcStorageContainerName": {
              "type": "string"
            },
            "appStorageAccountId": {
              "type": "string"
            },
            "appStorageQueueName": {
              "type": "string",
              "defaultValue": "events"
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]",
            "eventGridName": "[format('{0}-eventgrid', parameters('srcStorageAccountName'))]"
          },
          "resources": [
            {
              "type": "Microsoft.EventGrid/systemTopics",
              "apiVersion": "2021-06-01-preview",
              "name": "[variables('eventGridName')]",
              "location": "[variables('location')]",
              "properties": {
                "source": "[resourceId('Microsoft.Storage/storageAccounts', parameters('srcStorageAccountName'))]",
                "topicType": "Microsoft.Storage.StorageAccounts"
              }
            },
            {
              "type": "Microsoft.EventGrid/systemTopics/eventSubscriptions",
              "apiVersion": "2021-06-01-preview",
              "name": "[format('{0}/{1}', variables('eventGridName'), 'events')]",
              "properties": {
                "destination": {
                  "properties": {
                    "resourceId": "[parameters('appStorageAccountId')]",
                    "queueName": "[parameters('appStorageQueueName')]",
                    "queueMessageTimeToLiveInSeconds": 604800
                  },
                  "endpointType": "StorageQueue"
                },
                "filter": {
                  "subjectBeginsWith": "[format('/blobServices/default/containers/{0}/blobs', parameters('srcStorageContainerName'))]",
                  "includedEventTypes": [
                    "Microsoft.Storage.BlobCreated",
                    "Microsoft.Storage.BlobDeleted",
                    "Microsoft.Storage.BlobRenamed",
                    "Microsoft.Storage.DirectoryCreated",
                    "Microsoft.Storage.DirectoryDeleted",
                    "Microsoft.Storage.DirectoryRenamed"
                  ],
                  "enableAdvancedFilteringOnArrays": true
                },
                "eventDeliverySchema": "EventGridSchema",
                "retryPolicy": {
                  "maxDeliveryAttempts": 30,
                  "eventTimeToLiveInMinutes": 1440
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.EventGrid/systemTopics', variables('eventGridName'))]"
              ]
            }
          ]
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('appRGName')), 'Microsoft.Resources/deployments', 'appModule')]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('srcRGName')), 'Microsoft.Resources/deployments', 'srcModule')]",
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('srcRGName'))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "name": "appModule",
      "resourceGroup": "[parameters('appRGName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "srcRGName": {
            "value": "[parameters('srcRGName')]"
          },
          "srcStorageAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('srcRGName')), 'Microsoft.Resources/deployments', 'srcModule'), '2019-10-01').outputs.storageAccountName.value]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.613.9944",
              "templateHash": "8520499052745927279"
            }
          },
          "parameters": {
            "srcRGName": {
              "type": "string"
            },
            "srcStorageAccountName": {
              "type": "string"
            },
            "appNamePrefix": {
              "type": "string",
              "defaultValue": "[uniqueString(resourceGroup().id)]"
            },
            "appWorkspaceId": {
              "type": "string",
              "defaultValue": ""
            }
          },
          "functions": [],
          "variables": {
            "location": "[resourceGroup().location]",
            "appStorageAccountName": "[format('{0}storage', replace(parameters('appNamePrefix'), '-', ''))]",
            "appStorageQueueName": "events",
            "appServiceName": "[format('{0}-appservice', parameters('appNamePrefix'))]",
            "functionAppName": "[format('{0}-functionapp', parameters('appNamePrefix'))]",
            "appInsightsName": "[format('{0}-appinsights', parameters('appNamePrefix'))]",
            "rcloneScript": "chmod +x rclone && ./rclone copy app:config config && ./rclone --config config/rclone.conf -v copy src:artifacts dst: && ./rclone copy config app:config"
          },
          "resources": [
            {
              "type": "Microsoft.Storage/storageAccounts",
              "apiVersion": "2019-06-01",
              "name": "[variables('appStorageAccountName')]",
              "location": "[variables('location')]",
              "sku": {
                "name": "Standard_LRS"
              },
              "kind": "StorageV2",
              "properties": {
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                  "services": {
                    "file": {
                      "keyType": "Account",
                      "enabled": true
                    },
                    "blob": {
                      "keyType": "Account",
                      "enabled": true
                    }
                  },
                  "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
              }
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', variables('appStorageAccountName'), 'default')]",
              "properties": {
                "cors": {
                  "corsRules": []
                },
                "deleteRetentionPolicy": {
                  "enabled": true,
                  "days": 7
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}/{2}', variables('appStorageAccountName'), 'default', 'config')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('appStorageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}', variables('appStorageAccountName'), 'default')]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Storage/storageAccounts/queueServices/queues",
              "apiVersion": "2021-04-01",
              "name": "[format('{0}/{1}/{2}', variables('appStorageAccountName'), 'default', variables('appStorageQueueName'))]",
              "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/queueServices', variables('appStorageAccountName'), 'default')]"
              ]
            },
            {
              "type": "Microsoft.Insights/components",
              "apiVersion": "2020-02-02",
              "name": "[variables('appInsightsName')]",
              "location": "[variables('location')]",
              "kind": "web",
              "properties": {
                "Application_Type": "web",
                "WorkspaceResourceId": "[parameters('appWorkspaceId')]",
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
              }
            },
            {
              "type": "Microsoft.Web/serverfarms",
              "apiVersion": "2021-01-15",
              "name": "[variables('appServiceName')]",
              "location": "[variables('location')]",
              "kind": "functionapp",
              "sku": {
                "name": "Y1",
                "tier": "Dynamic",
                "size": "Y1",
                "family": "Y",
                "capacity": 0
              },
              "properties": {
                "perSiteScaling": false,
                "maximumElasticWorkerCount": 1,
                "isSpot": false,
                "reserved": true,
                "isXenon": false,
                "hyperV": false,
                "targetWorkerCount": 0,
                "targetWorkerSizeId": 0
              }
            },
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-01-15",
              "name": "[variables('functionAppName')]",
              "location": "[variables('location')]",
              "kind": "functionapp,linux",
              "properties": {
                "enabled": true,
                "hostNameSslStates": [
                  {
                    "name": "[format('{0}.azurewebsites.net', variables('functionAppName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  },
                  {
                    "name": "[format('{0}.scm.azurewebsites.net', variables('functionAppName'))]",
                    "sslState": "Disabled",
                    "hostType": "Standard"
                  }
                ],
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServiceName'))]",
                "reserved": false,
                "isXenon": false,
                "hyperV": false,
                "siteConfig": {
                  "appSettings": [
                    {
                      "name": "AzureWebJobsStorage",
                      "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};EndpointSuffix={1};AccountKey={2}', variables('appStorageAccountName'), environment().suffixes.storage, listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName')), '2019-06-01').keys[0].value)]"
                    },
                    {
                      "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                      "value": "[format('InstrumentationKey={0}', reference(resourceId('Microsoft.Insights/components', variables('appInsightsName'))).InstrumentationKey)]"
                    },
                    {
                      "name": "FUNCTIONS_WORKER_RUNTIME",
                      "value": "custom"
                    },
                    {
                      "name": "FUNCTIONS_EXTENSION_VERSION",
                      "value": "~3"
                    },
                    {
                      "name": "WEBSITE_MAX_DYNAMIC_APPLICATION_SCALE_OUT",
                      "value": "1"
                    },
                    {
                      "name": "WEBSITE_RUN_FROM_PACKAGE",
                      "value": "https://github.com/yaegashi/rclonefunction/releases/latest/download/rclonefunction.zip"
                    },
                    {
                      "name": "RCLONE_CONFIG_SRC_TYPE",
                      "value": "azureblob"
                    },
                    {
                      "name": "RCLONE_CONFIG_SRC_ACCOUNT",
                      "value": "[parameters('srcStorageAccountName')]"
                    },
                    {
                      "name": "RCLONE_CONFIG_SRC_KEY",
                      "value": "[listKeys(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('srcRGName')), 'Microsoft.Storage/storageAccounts', parameters('srcStorageAccountName')), '2019-06-01').keys[0].value]"
                    },
                    {
                      "name": "RCLONE_CONFIG_APP_TYPE",
                      "value": "azureblob"
                    },
                    {
                      "name": "RCLONE_CONFIG_APP_ACCOUNT",
                      "value": "[variables('appStorageAccountName')]"
                    },
                    {
                      "name": "RCLONE_CONFIG_APP_KEY",
                      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName')), '2019-06-01').keys[0].value]"
                    },
                    {
                      "name": "RCLONE_SCRIPT",
                      "value": "[variables('rcloneScript')]"
                    }
                  ]
                },
                "scmSiteAlsoStopped": false,
                "clientAffinityEnabled": false,
                "clientCertEnabled": false,
                "hostNamesDisabled": false,
                "dailyMemoryTimeQuota": 0,
                "httpsOnly": true,
                "redundancyMode": "None"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/components', variables('appInsightsName'))]",
                "[resourceId('Microsoft.Web/serverfarms', variables('appServiceName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-01-15",
              "name": "[format('{0}/{1}', variables('functionAppName'), 'web')]",
              "properties": {
                "numberOfWorkers": -1,
                "defaultDocuments": [
                  "Default.htm",
                  "Default.html",
                  "Default.asp",
                  "index.htm",
                  "index.html",
                  "iisstart.htm",
                  "default.aspx",
                  "index.php",
                  "hostingstart.html"
                ],
                "netFrameworkVersion": "v4.0",
                "phpVersion": "5.6",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "publishingUsername": "[format('${0}', variables('functionAppName'))]",
                "scmType": "None",
                "use32BitWorkerProcess": true,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                  {
                    "virtualPath": "/",
                    "physicalPath": "site\\wwwroot",
                    "preloadEnabled": true
                  }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                  "rampUpRules": []
                },
                "autoHealEnabled": false,
                "localMySqlEnabled": false,
                "ipSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictions": [
                  {
                    "ipAddress": "Any",
                    "action": "Allow",
                    "priority": 1,
                    "name": "Allow all",
                    "description": "Allow all access"
                  }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": true,
                "minTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
              ]
            },
            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2021-01-15",
              "name": "[format('{0}/{1}', variables('functionAppName'), format('{0}.azurewebsites.net', variables('functionAppName')))]",
              "properties": {
                "siteName": "[variables('functionAppName')]",
                "hostNameType": "Verified"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]"
              ]
            }
          ],
          "outputs": {
            "storageAccountId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Storage/storageAccounts', variables('appStorageAccountName'))]"
            },
            "storageQueueName": {
              "type": "string",
              "value": "[variables('appStorageQueueName')]"
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('appRGName'))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', subscription().subscriptionId, parameters('srcRGName')), 'Microsoft.Resources/deployments', 'srcModule')]"
      ]
    }
  ]
}